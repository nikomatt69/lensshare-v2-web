var l=(t=>(t.Mainnet="https://api-v2.lens.dev",t.Testnet="https://api-v2-mumbai.lens.dev",t))(l||{}),r=l;var N=()=>{switch(A){case"testnet":return{apiEndpoint:r.Testnet,lensHubProxyAddress:"0x4fbffF20302F3326B20052ab9C217C44F6480900",defaultCollectToken:"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",litProtocolEnvironment:"mumbai"};default:return{apiEndpoint:r.Mainnet,lensHubProxyAddress:"0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d",defaultCollectToken:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",litProtocolEnvironment:"polygon"}}},p=N;var L=process.env.NEXT_PUBLIC_LENS_NETWORK==="mainnet",V=process.env.NEXT_PUBLIC_IS_PRODUCTION==="true";var G=process.env.NEXT_PUBLIC_LENSTOK_URL;var A=process.env.NEXT_PUBLIC_LENS_NETWORK??"mainnet";var Y=process.env.NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA?.slice(0,7),k=p().apiEndpoint;var X=p().lensHubProxyAddress,$=p().defaultCollectToken,q=p().litProtocolEnvironment;var d="https://lenshareapp.xyz";var S=process.env.NEXT_PUBLIC_INFURA_ID,Q=L?`https://polygon-mainnet.infura.io/v3/${S}`:`https://polygon-mumbai.infura.io/v3/${S}`;var P=["image/jpeg","image/png","image/webp","image/gif","image/jpg"],I=["audio/mpeg","audio/wav","audio/mp4","audio/aac","audio/ogg","audio/webm","audio/flac"],O=["video/mp4","video/mpeg","video/ogg","video/webm","video/quicktime"],j=[...O,...P,...I];var J=process.env.EVER_ACCESS_KEY,Z=process.env.EVER_ACCESS_SECRET;var c="https://asset.lenshareapp.xyz",tt=`${c}/images/logo.png`;var et=process.env.NEXT_PUBLIC_LIVE_STUDIO_API_KEY;var st=`${c}/images/icon.png`;var ot=`${c}/images/placeholder.webp`;var f=process.env.LATEST_GIT_COMMIT_SHA,a=class{constructor({cachePrefix:e,staticAssets:t,cacheableRoutes:o,withQueryParams:n}){this.cacheStaticAsset=(e,t)=>{fetch(e).then(o=>{if([200,304].includes(o.status))t.put(e,o).catch(n=>{console.debug(`Failed to cache file - ${e}`,n),console.debug(`Failed to cache file - ${e}`,n)});else throw new Error("Failed to fetch from local")}).catch(console.debug)};this.cacheStaticAssets=async()=>{let e=await caches.open(this.cacheName);for(let t of this.staticAssets)this.cacheStaticAsset(t,e)};this.invalidatePreviousCache=async()=>{let e=await caches.keys();await Promise.all(e.filter(t=>t.startsWith(this.cachePrefix)).map(async t=>t!==this.cacheName?await caches.delete(t):await Promise.resolve(!1)))};this.put=async(e,t)=>{let o=await fetch(e,{cache:"reload"});!o.redirected&&[200,304].includes(o.status)?await t.put(e,o):await t.delete(e)};this.get=async e=>{let{request:t}=e,{pathname:o,search:n}=new URL(t.url),h=`${o}${this.withQueryParams?n:""}`;if((this.staticAssets.has(o)||this.cacheableRoutes.has(o))&&this.cacheName){let x=await caches.open(this.cacheName),R=await x.match(h);if(navigator.onLine&&e.waitUntil(this.put(h,x)),R)return R}return await fetch(t)};this.cachePrefix=e,this.cacheName=`${e}_${f}`,this.staticAssets=new Set(t),this.cacheableRoutes=new Set(o),this.withQueryParams=n??!0}};var D=`${d}/api/leafwatch/impressions`,U=5e3,E=null,i=new Set,C=()=>{let s=Array.from(i);s.length>0&&E&&(i.clear(),fetch(D,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({viewer_id:E,ids:s}),keepalive:!0}).then(()=>{}).catch(()=>{}))},u=process.env.STATIC_ASSETS??[],b=["/","/contact","/explore"],T=["https://static-asset.lenshareapp.xyz","https://asset.lenshareapp.xyz","https://prerender.lenshareapp.xyz"],_=new a({cachePrefix:"SWCache",cacheableRoutes:[...b,...T],staticAssets:u});async function y(){self.skipWaiting(),await _.cacheStaticAssets()}var m=async()=>{await self.clients.claim(),await _.invalidatePreviousCache()},g=s=>{let e=s.request.clone(),{origin:t}=new URL(e.url);(self.location.origin===t||T.includes(t))&&s.respondWith(_.get(s))};self.addEventListener("message",s=>{s.data&&s.data.type==="PUBLICATION_VISIBLE"&&(i.add(s.data.id),E=s.data.viewerId)});setInterval(C,U);self.addEventListener("fetch",g);self.addEventListener("install",s=>s.waitUntil(y()));self.addEventListener("activate",s=>s.waitUntil(m()));
