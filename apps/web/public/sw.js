var f=Object.defineProperty;var p=(s,e,t)=>e in s?f(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>(p(s,typeof e!="symbol"?e+"":e,t),t);var r=["/walletconnect.svg","/favicon-16x16.png","/icon.png","/favicon.ico","/apple-touch-icon.png","/images/favicon-16x16.png","/images/icon.png","/images/Lenssharelogo.png","/images/brands/x-dark.svg","/images/brands/x-light.svg","/images/source/lensshare.jpg","/images/source/orb.jpg","/images/source/buttrfly.jpg","/images/source/hey.jpg","/images/source/phaver.jpg","/images/source/lenster.jpg","/images/Lenstoklogo.png","/images/sound.png","/images/default-avatar.svg","/images/social/ens.svg","/images/social/worldcoin.png","/images/social/sybil.png","/images/social/x.svg","/images/social/poh.png","/images/social/reddit-logo.png","/images/social/lenster.png","/images/social/ENS-Ethereum-Name-Service.svg","/images/social/twitter.png","/images/social/linkedin.png","/images/social/twitter.svg","/images/splash.png","/images/camera-video.svg","/images/Lenstoknewlogo.png","/images/faviconok.png","/images/Lenstoknewlogo3.png","/images/tokens/usdc.svg","/images/tokens/dai.svg","/images/tokens/wmatic.svg","/images/tokens/bct.svg","/images/tokens/nct.svg","/images/tokens/weth.svg","/.well-known/security.txt","/lens.svg","/icon copy.png","/progressier.js","/push/addfriend.svg","/push/videobtndarkmode.svg","/push/micoffbtn.svg","/push/MinusCircle.svg","/push/lock.svg","/push/Shield.svg","/push/emoji.svg","/push/creategroup.svg","/push/requestchat.svg","/push/gif.svg","/push/gitIcon.svg","/push/callacceptbtn.svg","/push/CheckCircle.svg","/push/dismissadmin.svg","/push/deprecated.svg","/push/createmessage.svg","/push/send.svg","/push/more.svg","/push/miconbtn.svg","/push/uploadImage.svg","/push/callendbtn.svg","/push/cameraonbtn.svg","/push/video.svg","/push/cameraoffbtn.svg","/logo.png","/coinbase.svg","/icon-512x512.png","/t.png","/5.png","/robots.txt","/fonts/SofiaProSoftBold-webfont.woff2","/fonts/SofiaProSoftMed-webfont.woff2","/fonts/Helvetica.ttf","/fonts/helvetica-rounded-bold-5871d05ead8de.ttf","/fonts/Helvetica-Bold.ttf","/fonts/SofiaProSoftReg-webfont.woff2","/dynamic.svg","/assets/type-code.svg","/assets/type-italic.svg","/assets/type-bold.svg","/2.png","/pride.png","/favicon-32x32.png","/icon-128x128.png"];var A="ac777a2",n=class{constructor({cachePrefix:e,staticAssets:t,cacheableRoutes:a,withQueryParams:i}){c(this,"cacheName");c(this,"cachePrefix");c(this,"staticAssets");c(this,"cacheableRoutes");c(this,"withQueryParams");c(this,"cacheStaticAsset",(e,t)=>{fetch(e).then(a=>{if([200,304].includes(a.status))t.put(e,a).catch(i=>{console.debug(`Failed to cache file - ${e}`,i),console.debug(`Failed to cache file - ${e}`,i)});else throw new Error("Failed to fetch from local")}).catch(console.debug)});c(this,"cacheStaticAssets",async()=>{let e=await caches.open(this.cacheName);for(let t of this.staticAssets)this.cacheStaticAsset(t,e)});c(this,"invalidatePreviousCache",async()=>{let e=await caches.keys();await Promise.all(e.filter(t=>t.startsWith(this.cachePrefix)).map(async t=>t!==this.cacheName?await caches.delete(t):await Promise.resolve(!1)))});c(this,"put",async(e,t)=>{let a=await fetch(e,{cache:"reload"});!a.redirected&&[200,304].includes(a.status)?await t.put(e,a):await t.delete(e)});c(this,"get",async e=>{let{request:t}=e,{pathname:a,search:i}=new URL(t.url),h=`${a}${this.withQueryParams?i:""}`;if((this.staticAssets.has(a)||this.cacheableRoutes.has(a))&&this.cacheName){let l=await caches.open(this.cacheName),d=await l.match(h);if(navigator.onLine&&e.waitUntil(this.put(h,l)),d)return d}return await fetch(t)});this.cachePrefix=e,this.cacheName=`${e}_${A}`,this.staticAssets=new Set(t),this.cacheableRoutes=new Set(a),this.withQueryParams=i??!0}};var g=r??[],S=["/","/contact","/explore"],u=["https://static-assets.lenshareapp.xyz","https://prerender.lenshareapp.xyz","https://og.lenshareapp.xyz","https://asset.lenshareapp.xyz"],o=new n({cachePrefix:"SWCache",cacheableRoutes:[...S,...u],staticAssets:g});async function v(){self.skipWaiting(),await o.cacheStaticAssets()}var m=async()=>{await self.clients.claim(),await o.invalidatePreviousCache()},y=s=>{let e=s.request.clone(),{origin:t}=new URL(e.url);(self.location.origin===t||u.includes(t))&&s.respondWith(o.get(s))};self.addEventListener("fetch",y);self.addEventListener("install",s=>s.waitUntil(v()));self.addEventListener("activate",s=>s.waitUntil(m()));
